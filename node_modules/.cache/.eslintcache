[{"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\index.js":"1","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\App.js":"2","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Homepage.js":"3","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Getstarted.js":"4","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\CreateCospacePage.js":"5","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Chatpage.js":"6","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Mainpage.js":"7","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Taskspage.js":"8","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\CoactorsPage.js":"9","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\ShowUsernamePage.js":"10","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\TodoPage.js":"11","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\JitsiRoom.js":"12","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Navbar.js":"13","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Blankspace.js":"14","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Titlebox.js":"15","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Vector.js":"16","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CreateCospace.js":"17","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Chat.js":"18","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CoactorsSection.js":"19","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\TodoSection.js":"20","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CospaceSection.js":"21","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CospaceMenu.js":"22","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\ShowUsernameComponent.js":"23","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Task.js":"24","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Sidemenu.js":"25","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Login.js":"26","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Tasks.js":"27","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\taskServices1.js":"28","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\Firebase.js":"29","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\taskServices.js":"30"},{"size":219,"mtime":1650607579000,"results":"31","hashOfConfig":"32"},{"size":3876,"mtime":1650607579000,"results":"33","hashOfConfig":"32"},{"size":739,"mtime":1677998149549,"results":"34","hashOfConfig":"32"},{"size":751,"mtime":1650607579000,"results":"35","hashOfConfig":"32"},{"size":565,"mtime":1673892404636,"results":"36","hashOfConfig":"32"},{"size":910,"mtime":1650607579000,"results":"37","hashOfConfig":"32"},{"size":587,"mtime":1650607579000,"results":"38","hashOfConfig":"32"},{"size":913,"mtime":1650607579000,"results":"39","hashOfConfig":"32"},{"size":953,"mtime":1650607579000,"results":"40","hashOfConfig":"32"},{"size":300,"mtime":1650607579000,"results":"41","hashOfConfig":"32"},{"size":532,"mtime":1650607579000,"results":"42","hashOfConfig":"32"},{"size":63,"mtime":1650607579000,"results":"43","hashOfConfig":"32"},{"size":805,"mtime":1650607579000,"results":"44","hashOfConfig":"32"},{"size":148,"mtime":1650607579000,"results":"45","hashOfConfig":"32"},{"size":350,"mtime":1650607579000,"results":"46","hashOfConfig":"32"},{"size":687,"mtime":1650607579000,"results":"47","hashOfConfig":"32"},{"size":4530,"mtime":1650607579000,"results":"48","hashOfConfig":"32"},{"size":2851,"mtime":1678300080483,"results":"49","hashOfConfig":"32"},{"size":554,"mtime":1650607579000,"results":"50","hashOfConfig":"32"},{"size":1858,"mtime":1678295147611,"results":"51","hashOfConfig":"32"},{"size":2632,"mtime":1650607579000,"results":"52","hashOfConfig":"32"},{"size":1591,"mtime":1650607579000,"results":"53","hashOfConfig":"32"},{"size":494,"mtime":1650607579000,"results":"54","hashOfConfig":"32"},{"size":9121,"mtime":1650607579000,"results":"55","hashOfConfig":"32"},{"size":907,"mtime":1650607579000,"results":"56","hashOfConfig":"32"},{"size":497,"mtime":1717126404988,"results":"57","hashOfConfig":"32"},{"size":2055,"mtime":1678295494567,"results":"58","hashOfConfig":"32"},{"size":367,"mtime":1650607579000,"results":"59","hashOfConfig":"32"},{"size":599,"mtime":1678300176683,"results":"60","hashOfConfig":"32"},{"size":367,"mtime":1650607579000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1r6uuio",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\index.js",[],["129","130"],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\App.js",["131"],"import Homepage from \"./Homepage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Getstarted from \"./Getstarted\";\nimport Mainpage from \"./Mainpage\";\nimport CreateCospacePage from \"./CreateCospacePage\";\nimport Chatpage from \"./Chatpage\";\nimport Taskspage from \"./Taskspage\";\nimport TodoPage from \"./TodoPage\";\nimport CoactorsPage from \"./CoactorsPage\";\nimport { useEffect, useState } from \"react\";\nimport ShowUsernamePage from \"./ShowUsernamePage\";\nimport JitsiRoom from \"./JitsiRoom\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const getUser = () => {\n      fetch(\"http://localhost:8000/auth/login/success\", {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Credentials\": true,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) return response.json();\n          throw new Error(\"Authentication has been failed\");\n        })\n        .then((resObject) => {\n          setUser(resObject.user);\n          localStorage.setItem(\"user\", JSON.stringify(resObject.user));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n    getUser();\n  }, []);\n  return (\n    <Router>\n      <div>\n        <Routes>\n          <Route\n            path=\"/\"\n            exact\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <Navigate to=\"/mainpage\" />\n              ) : (\n                <Homepage />\n              )\n            }\n          />\n          <Route\n            path=\"/getstarted\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <Navigate to=\"/mainpage\" />\n              ) : (\n                <Getstarted />\n              )\n            }\n          />\n          <Route\n            path=\"/mainpage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <Mainpage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/createcospace\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <CreateCospacePage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/chatpage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <Chatpage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/taskpage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <Taskspage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/todopage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <TodoPage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/coactorspage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <CoactorsPage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n          <Route\n            path=\"/showusernamepage\"\n            element={\n              localStorage.getItem(\"user\") || user ? (\n                <ShowUsernamePage />\n              ) : (\n                <Navigate to=\"/getstarted\" />\n              )\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Homepage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Getstarted.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\CreateCospacePage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Chatpage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Mainpage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\Taskspage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\CoactorsPage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\ShowUsernamePage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\TodoPage.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\JitsiRoom.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Navbar.js",["132"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  const pictureUrl = JSON.parse(localStorage.getItem(\"user\")).photos[0].value;\n\n  const logout = () => {\n    localStorage.clear();\n    window.open(\"http://localhost:8000/auth/logout\", \"_self\");\n  };\n\n  return (\n    <nav>\n      <div className=\"logo\">\n        <p>Co-ACT</p>\n      </div>\n      <div className=\"notificationandprofile\">\n        <Link to=\"/showusernamepage\">\n          <button>\n            <img\n              src={pictureUrl}\n              alt=\"avatar\"\n              style={{ borderRadius: \"50%\" }}\n            />\n          </button>\n        </Link>\n        <button onClick={logout}>\n          <img src=\"images/Sign Out.png\" />\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Blankspace.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Titlebox.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Vector.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CreateCospace.js",["133"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13],\n};\n\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nclass CreateCospace extends Component {\n  componentDidMount = () => {\n    this.getCoActors();\n  };\n\n  getCoActors = () => {\n    axios\n      .get(\"http://localhost:8000/user/\")\n      .then((response) => {\n        const data = response.data;\n        let payload = [];\n        data.map((user, index) => {\n          payload.push({\n            id: user.userId,\n            text: user.username,\n          });\n        });\n\n        this.setState({ suggestions: payload });\n\n        console.log(\"Data has been received!!\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      tags: [\n        {\n          id: JSON.parse(localStorage.getItem(\"user\")).id,\n          text: JSON.parse(localStorage.getItem(\"user\")).displayName,\n        },\n      ],\n      suggestions: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDelete(i) {\n    const { tags } = this.state;\n    this.setState({\n      tags: tags.filter((tag, index) => index !== i),\n    });\n  }\n\n  handleAddition(tag) {\n    this.setState((state) => ({ tags: [...state.tags, tag] }));\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n    this.setState({ tags: newTags });\n  }\n  handleChange(event) {\n    if ([].includes(event.target.name)) {\n      let coactor = [this.state.coactor];\n      coactor.add(event.target.name);\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let databody = {\n      title: this.state.title,\n      description: this.state.description,\n      coactor: this.state.tags,\n      uid: JSON.parse(localStorage.getItem(\"user\")).id,\n    };\n    console.log(databody);\n    axios\n      .post(\"http://localhost:8000/cospace/add\", { databody })\n      .then((res) => {\n        localStorage.setItem(\"cospace_created\", \"1\");\n        window.location.href = \"http://localhost:3000/mainpage\";\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n        } else if (error.request) {\n          console.log(error.request);\n        } else if (error.message) {\n          console.log(error.message);\n        }\n      });\n  }\n  render() {\n    const { tags, suggestions } = this.state;\n    return (\n      <div className=\"createcospace\">\n        <h1>Co-SPACE Creation</h1>\n        <form onSubmit={this.handleSubmit} method=\"POST\">\n          <div className=\"cospacename\">\n            <label htmlFor=\"coSpaceName\">Co-Space Name:</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"coSpaceName\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"cospacedescription\">\n            <label htmlFor=\"coSpaceDescription\">Description:</label>\n            <textarea\n              rows=\"15\"\n              cols=\"150\"\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"coactornames\">\n            <label htmlFor=\"coActorNames\">Co-Actor Names:</label>\n            <ReactTags\n              tags={tags}\n              suggestions={suggestions}\n              handleDelete={this.handleDelete}\n              handleAddition={this.handleAddition}\n              handleDrag={this.handleDrag}\n              delimiters={delimiters}\n            />\n          </div>\n          <div className=\"submitcospace\">\n            <input\n              type=\"submit\"\n              name=\"create\"\n              id=\"create\"\n              value=\"Create\"\n            ></input>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default CreateCospace;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Chat.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CoactorsSection.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\TodoSection.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CospaceSection.js",["134","135","136","137"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\n\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nclass CospaceSection extends Component {\n  state = { posts: [] };\n  componentDidMount = () => {\n    this.getCospaces();\n    if (localStorage.getItem(\"cospace_created\") === \"1\") {\n      NotificationManager.success(\"Co-Space Created Successfully!\");\n      localStorage.setItem(\"cospace_created\", \"0\");\n    }\n  };\n  getCospaces = () => {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n\n    axios\n      .get(\"http://localhost:8000/cospace/\")\n      .then((response) => {\n        let data = [];\n        response.data.map((post, index) => {\n          if (post.uid === uid) {\n            data.push(post);\n          } else {\n            post.coactors.map((obj, index) => {\n              if (obj.id === uid) {\n                data.push(post);\n              }\n            });\n          }\n        });\n\n        this.setState({ posts: data });\n        console.log(\"Data has been received!!\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  setCurrentCospace = (e) => {\n    localStorage.setItem(\"recent_cospace_clicked\", e.currentTarget.id);\n    this.state.posts.map((post) => {\n      if (post.cospacename === e.currentTarget.id) {\n        localStorage.setItem(\n          \"recent_cospace_clicked_description\",\n          post.description\n        );\n        localStorage.setItem(\n          \"recent_cospace_clicked_coactors\",\n          JSON.stringify(post.coactors)\n        );\n        localStorage.setItem(\"recent_cospace_clicked_uid\", post.uid);\n      }\n    });\n    window.location.href = \"http://localhost:3000/taskpage\";\n  };\n\n  displayCospace = (posts) => {\n    return posts.map((post, index) => (\n      <div\n        key={index}\n        className=\"cospace\"\n        id={post.cospacename}\n        onClick={this.setCurrentCospace}\n      >\n        <h3>{post.cospacename}</h3>\n        <p>{post.description}</p>\n      </div>\n    ));\n  };\n\n  render() {\n    return (\n      <div className=\"cospacesection\">\n        <NotificationContainer/>\n        <div className=\"mainpageheading\">\n          <h1>Co-SPACES</h1>\n        </div>\n        <div className=\"cospacelist\">\n          {this.displayCospace(this.state.posts)}\n        </div>\n        <Link to=\"/createcospace\">\n          <button className=\"createcospacebutton\">\n            <img src=\"/images/Add User Group Man Man.png\" />\n            <p>Create</p>\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default CospaceSection;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\CospaceMenu.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\ShowUsernameComponent.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Task.js",["138","139","140","141","142","143","144"],"import React from \"react\";\nimport axios from \"axios\";\nimport { deleteTask } from \"../services/taskServices1\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nclass Task extends React.Component {\n  state = {\n    assignedBy: JSON.parse(localStorage.getItem(\"user\")).displayName,\n    uid: JSON.parse(localStorage.getItem(\"user\")).id,\n    cospaceName: localStorage.getItem(\"recent_cospace_clicked\"),\n    task: \"\",\n    taskNotes: \"\",\n    taskStatus: \"Pending\",\n    taskList: [],\n  };\n\n  compare = (a, b) => {\n      if(a.taskStatus == b.taskStatus) return 0;\n      if(a.taskStatus == \"Completed\") return 1;\n      if(a.taskStatus == \"Pending\") return -1;\n      if(b.taskStatus == \"Completed\") return -1;\n      if(b.taskStatus == \"Pending\") return 1;\n      return 0;\n  }\n\n  componentDidMountAsst = async () => {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n    const currentCospace = localStorage.getItem(\"recent_cospace_clicked\");\n    try {\n      const { data } = await this.getTasks();\n      let datas = [];\n      data.forEach((task) => {\n        if (task.cospaceName === currentCospace) {\n          datas.push(task);\n        }\n      });\n      datas.sort(this.compare);\n      this.setState({ taskList: datas });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  componentDidMount() {\n    this.componentDidMountAsst();\n  }\n\n  getTasks = () => {\n    return axios.get(\"http://localhost:8000/task\");\n  };\n  handleChange = (event) => {\n    if (event.target.name === \"taskStatus\") {\n      this.setState({\n        taskStatus: event.target.value,\n      });\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.task === \"\" || this.state.taskNotes === \"\") {\n      NotificationManager.warning(\n        \"Please Fill up Required Field. Please Check Task field And Task Notes field\"\n      );\n      return false;\n    }\n    let data = {\n      assignedBy: this.state.assignedBy,\n      uid: this.state.uid,\n      task: this.state.task,\n      taskNotes: this.state.taskNotes,\n      taskStatus: this.state.taskStatus,\n      cospaceName: this.state.cospaceName,\n    };\n\n    axios\n      .post(\"http://localhost:8000/task/add\", data)\n      .then(async (res) => {\n        NotificationManager.success(\"Task added!\");\n        this.state.task = \"\";\n        this.state.taskNotes = \"\";\n        this.state.taskStatus = \"Pending\";\n        this.componentDidMountAsst();\n      })\n      .catch((error) => {\n        if (error.response.status && error.response.status === 400)\n          NotificationManager.error(\"Bad Request\");\n        else NotificationManager.error(\"Something Went Wrong\");\n      });\n  };\n\n  handleDelete = async (currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      const taskList = originalTasks.filter((task) => task._id !== currentTask);\n      this.setState({ taskList });\n      await deleteTask(currentTask);\n      NotificationManager.info(\"Task deleted successfully!!\");\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  };\n\n  handleTake = async(currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      for(let task of originalTasks){\n          if(task._id === currentTask){\n              task.takenBy = this.state.assignedBy;\n              task.taskStatus = \"In Progress\";\n          }\n      }\n      this.setState({ originalTasks });\n\n      axios\n      .patch(\"http://localhost:8000/task/take/\" + currentTask, {actor: this.state.assignedBy})\n      .then(() => {\n          NotificationManager.success(\"Task taken successfully!!\");\n      })\n      .catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n      })\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  }\n\n  handleDone = async(currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      for(let task of originalTasks){\n          if(task._id === currentTask){\n              task.takenBy = this.state.assignedBy;\n              task.taskStatus = \"Completed\";\n          }\n      }\n      this.setState({ originalTasks });\n\n      axios\n      .patch(\"http://localhost:8000/task/done/\" + currentTask)\n      .then(() => {\n          NotificationManager.success(\"Task Completed successfully!!\");\n      })\n      .catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n      })\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  }\n\n\n  render() {\n    let { taskList } = this.state;\n    return (\n      <div className=\"tasksection\">\n        <div className=\"noticontainer\" id=\"noticontainer\">\n          <NotificationContainer />\n        </div>\n        <h1>Tasks</h1>\n        <h2>{localStorage.getItem(\"recent_cospace_clicked_description\")}</h2>\n        <div className=\"addnewtask\">\n          <form onSubmit={this.handleSubmit} className=\"taskform\">\n            <div className=\"taskname\">\n              <label htmlFor=\"taskName\">\n                <b>Task Name</b>\n              </label>\n              <input\n                type=\"text\"\n                name=\"task\"\n                className=\"taskname\"\n                onChange={this.handleChange}\n                value={this.state.task}\n              />\n            </div>\n            <div className=\"tasknotes\">\n              <label htmlFor=\"taskName\">\n                <b>Task Notes</b>\n              </label>\n              <textarea\n                rows=\"3\"\n                name=\"taskNotes\"\n                className=\"form-control\"\n                onChange={this.handleChange}\n                value={this.state.taskNotes}\n              ></textarea>\n            </div>\n            <div id=\"flexrow\">\n              <div className=\"taskstatus\">\n                <label htmlFor=\"taskStatus\">\n                  <b>Task Status</b>\n                </label>\n                <select\n                  name=\"taskStatus\"\n                  className=\"taskstatusselect\"\n                  onChange={this.handleChange}\n                  value={this.state.taskStatus}\n                >\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"In Progress\">In progress</option>\n                  <option value=\"Completed\">Completed</option>\n                  <option value=\"Hold\">Hold</option>\n                </select>\n              </div>\n              <div className=\"submitnewtask\">\n                <input\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"addnewtask\"\n                  value=\"Add\"\n                ></input>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"tasklist\">\n          <ul className=\"taskcards tasklisthead\" style={{ height: \"50px\" }}>\n            <li>\n              <div className=\"taskcard\">\n                <div className=\"taskName\">\n                  <b>Task</b>\n                </div>\n                <div className=\"taskNotes\">\n                  <b>Task Notes</b>\n                </div>\n                <div className=\"assignedBy\">\n                  <b>Assigned By</b>\n                </div>\n                <div className=\"taskStatus\">\n                  <b>Task Status</b>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"tasklist\">\n          <ul className=\"taskcards\">\n            {taskList.map((task) => (\n              <li>\n                <div className=\"taskcard\">\n                  <div className=\"taskName\">{task.task}</div>\n                  <div className=\"taskNotes\">{task.taskNotes}</div>\n                  <div className=\"assignedBy\">{task.assignedBy}</div>\n                  <div className=\"taskStatus\">{task.taskStatus}</div>\n                </div>\n                <div className=\"taskcontrols\">\n                  <div className=\"edittasks\">\n                    {   (task.taskStatus !== \"Completed\") ?\n                        task.takenBy == this.state.assignedBy?\n                        <button\n                        id=\"donebtn\"\n                        onClick={() => this.handleDone(task._id)}\n                        >\n                        Done\n                      </button>\n                     : <button\n                      id=\"editbtn\"\n                      onClick={() => this.handleTake(task._id)}\n                      >\n                      Take\n                    </button>\n                    :\" \"}\n                  </div>\n                  <div className=\"deletetasks\">\n                    <button\n                      id=\"deletebtn\"\n                      onClick={() => this.handleDelete(task._id)}\n                      >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n                {task.takenBy && <div className=\"taken\">Taken By: {task.takenBy}</div>}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Sidemenu.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Login.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\components\\Tasks.js",["145"],"import { Component } from \"react\";\nimport {\n  addTask,\n  getTasks,\n  updateTask,\n  deleteTask,\n} from \"../services/taskServices\";\n\nclass Tasks extends Component {\n  state = { tasks: [], currentTask: \"\" };\n  async componentDidMount() {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n    try {\n      const { data } = await getTasks();\n      let datas = [];\n      data.map((todo) => {\n        if (uid === todo.uid) {\n          datas.push(todo);\n        }\n      });\n      this.setState({ tasks: datas });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    this.setState({ currentTask: input.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const originalTasks = this.state.tasks;\n    try {\n      const { data } = await addTask({\n        task: this.state.currentTask,\n        uid: JSON.parse(localStorage.getItem(\"user\")).id,\n      });\n      const tasks = originalTasks;\n      tasks.push(data);\n      this.setState({ tasks, currentTask: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleUpdate = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = [...originalTasks];\n      const index = tasks.findIndex((task) => task._id === currentTask);\n      tasks[index] = { ...tasks[index] };\n      tasks[index].completed = !tasks[index].completed;\n      this.setState({ tasks });\n      await updateTask(currentTask, {\n        completed: tasks[index].completed,\n      });\n      console.log(tasks[index].completed);\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n\n  handleDelete = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = originalTasks.filter((task) => task._id !== currentTask);\n      this.setState({ tasks });\n      await deleteTask(currentTask);\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n}\n\nexport default Tasks;\n","C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\taskServices1.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\Firebase.js",[],"C:\\Users\\AD\\Desktop\\Co-act-main\\src\\services\\taskServices.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":17,"column":8,"nodeType":"152","messageId":"153","endLine":17,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":28,"column":11,"nodeType":"156","endLine":28,"endColumn":44},{"ruleId":"157","severity":1,"message":"158","line":23,"column":32,"nodeType":"159","messageId":"160","endLine":23,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":27,"column":41,"nodeType":"159","messageId":"160","endLine":27,"endColumn":43},{"ruleId":"157","severity":1,"message":"158","line":31,"column":44,"nodeType":"159","messageId":"160","endLine":31,"endColumn":46},{"ruleId":"157","severity":1,"message":"158","line":49,"column":33,"nodeType":"159","messageId":"160","endLine":49,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":91,"column":13,"nodeType":"156","endLine":91,"endColumn":61},{"ruleId":"161","severity":1,"message":"162","line":21,"column":23,"nodeType":"163","messageId":"164","endLine":21,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":22,"column":23,"nodeType":"163","messageId":"164","endLine":22,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":23,"column":23,"nodeType":"163","messageId":"164","endLine":23,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":24,"column":23,"nodeType":"163","messageId":"164","endLine":24,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":25,"column":23,"nodeType":"163","messageId":"164","endLine":25,"endColumn":25},{"ruleId":"150","severity":1,"message":"165","line":30,"column":11,"nodeType":"152","messageId":"153","endLine":30,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":259,"column":38,"nodeType":"163","messageId":"164","endLine":259,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":16,"column":23,"nodeType":"159","messageId":"160","endLine":16,"endColumn":25},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'JitsiRoom' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'uid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]