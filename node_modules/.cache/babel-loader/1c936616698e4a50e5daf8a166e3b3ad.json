{"ast":null,"code":"import { Component } from \"react\";\nimport { addTask, getTasks, updateTask, deleteTask } from \"../services/taskServices\";\n\nclass Tasks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      this.setState({\n        currentTask: input.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const originalTasks = this.state.tasks;\n\n      try {\n        const {\n          data\n        } = await addTask({\n          task: this.state.currentTask,\n          uid: JSON.parse(localStorage.getItem(\"user\")).id\n        });\n        const tasks = originalTasks;\n        tasks.push(data);\n        this.setState({\n          tasks,\n          currentTask: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleUpdate = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = [...originalTasks];\n        const index = tasks.findIndex(task => task._id === currentTask);\n        tasks[index] = { ...tasks[index]\n        };\n        tasks[index].completed = !tasks[index].completed;\n        this.setState({\n          tasks\n        });\n        await updateTask(currentTask, {\n          completed: tasks[index].completed\n        });\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          tasks\n        });\n        await deleteTask(currentTask);\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n\n    try {\n      const {\n        data\n      } = await getTasks();\n      let datas = [];\n      data.map(todo => {\n        if (uid === todo.uid) {\n          datas.push(todo);\n        }\n      });\n      this.setState({\n        tasks: datas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["D:/6th sem/HCI/Co-act-main/Co-act-main/src/components/Tasks.js"],"names":["Component","addTask","getTasks","updateTask","deleteTask","Tasks","state","tasks","currentTask","handleChange","currentTarget","input","setState","value","handleSubmit","e","preventDefault","originalTasks","data","task","uid","JSON","parse","localStorage","getItem","id","push","error","console","log","handleUpdate","index","findIndex","_id","completed","handleDelete","filter","componentDidMount","datas","map","todo"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,0BALP;;AAOA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADoB;;AAAA,SAkB5BC,YAlB4B,GAkBb,CAAC;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAD,KAA8B;AAC3C,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEG,KAAK,CAACE;AAArB,OAAd;AACD,KApB2B;;AAAA,SAsB5BC,YAtB4B,GAsBb,MAAOC,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,aAAa,GAAG,KAAKX,KAAL,CAAWC,KAAjC;;AACA,UAAI;AACF,cAAM;AAAEW,UAAAA;AAAF,YAAW,MAAMjB,OAAO,CAAC;AAC7BkB,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWE,WADY;AAE7BY,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAFjB,SAAD,CAA9B;AAIA,cAAMlB,KAAK,GAAGU,aAAd;AACAV,QAAAA,KAAK,CAACmB,IAAN,CAAWR,IAAX;AACA,aAAKN,QAAL,CAAc;AAAEL,UAAAA,KAAF;AAASC,UAAAA,WAAW,EAAE;AAAtB,SAAd;AACD,OARD,CAQE,OAAOmB,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KApC2B;;AAAA,SAsC5BG,YAtC4B,GAsCb,MAAOtB,WAAP,IAAuB;AACpC,YAAMS,aAAa,GAAG,KAAKX,KAAL,CAAWC,KAAjC;;AACA,UAAI;AACF,cAAMA,KAAK,GAAG,CAAC,GAAGU,aAAJ,CAAd;AACA,cAAMc,KAAK,GAAGxB,KAAK,CAACyB,SAAN,CAAiBb,IAAD,IAAUA,IAAI,CAACc,GAAL,KAAazB,WAAvC,CAAd;AACAD,QAAAA,KAAK,CAACwB,KAAD,CAAL,GAAe,EAAE,GAAGxB,KAAK,CAACwB,KAAD;AAAV,SAAf;AACAxB,QAAAA,KAAK,CAACwB,KAAD,CAAL,CAAaG,SAAb,GAAyB,CAAC3B,KAAK,CAACwB,KAAD,CAAL,CAAaG,SAAvC;AACA,aAAKtB,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACA,cAAMJ,UAAU,CAACK,WAAD,EAAc;AAC5B0B,UAAAA,SAAS,EAAE3B,KAAK,CAACwB,KAAD,CAAL,CAAaG;AADI,SAAd,CAAhB;AAGD,OATD,CASE,OAAOP,KAAP,EAAc;AACd,aAAKf,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEU;AAAT,SAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KArD2B;;AAAA,SAuD5BQ,YAvD4B,GAuDb,MAAO3B,WAAP,IAAuB;AACpC,YAAMS,aAAa,GAAG,KAAKX,KAAL,CAAWC,KAAjC;;AACA,UAAI;AACF,cAAMA,KAAK,GAAGU,aAAa,CAACmB,MAAd,CAAsBjB,IAAD,IAAUA,IAAI,CAACc,GAAL,KAAazB,WAA5C,CAAd;AACA,aAAKI,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACA,cAAMH,UAAU,CAACI,WAAD,CAAhB;AACD,OAJD,CAIE,OAAOmB,KAAP,EAAc;AACd,aAAKf,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEU;AAAT,SAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAjE2B;AAAA;;AAEL,QAAjBU,iBAAiB,GAAG;AACxB,UAAMjB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,EAArD;;AACA,QAAI;AACF,YAAM;AAAEP,QAAAA;AAAF,UAAW,MAAMhB,QAAQ,EAA/B;AACA,UAAIoC,KAAK,GAAG,EAAZ;AACApB,MAAAA,IAAI,CAACqB,GAAL,CAAUC,IAAD,IAAU;AACjB,YAAIpB,GAAG,KAAKoB,IAAI,CAACpB,GAAjB,EAAsB;AACpBkB,UAAAA,KAAK,CAACZ,IAAN,CAAWc,IAAX;AACD;AACF,OAJD;AAKA,WAAK5B,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE+B;AAAT,OAAd;AACD,KATD,CASE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAhB2B;;AAoE9B,eAAetB,KAAf","sourcesContent":["import { Component } from \"react\";\nimport {\n  addTask,\n  getTasks,\n  updateTask,\n  deleteTask,\n} from \"../services/taskServices\";\n\nclass Tasks extends Component {\n  state = { tasks: [], currentTask: \"\" };\n  async componentDidMount() {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n    try {\n      const { data } = await getTasks();\n      let datas = [];\n      data.map((todo) => {\n        if (uid === todo.uid) {\n          datas.push(todo);\n        }\n      });\n      this.setState({ tasks: datas });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    this.setState({ currentTask: input.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const originalTasks = this.state.tasks;\n    try {\n      const { data } = await addTask({\n        task: this.state.currentTask,\n        uid: JSON.parse(localStorage.getItem(\"user\")).id,\n      });\n      const tasks = originalTasks;\n      tasks.push(data);\n      this.setState({ tasks, currentTask: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleUpdate = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = [...originalTasks];\n      const index = tasks.findIndex((task) => task._id === currentTask);\n      tasks[index] = { ...tasks[index] };\n      tasks[index].completed = !tasks[index].completed;\n      this.setState({ tasks });\n      await updateTask(currentTask, {\n        completed: tasks[index].completed,\n      });\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n\n  handleDelete = async (currentTask) => {\n    const originalTasks = this.state.tasks;\n    try {\n      const tasks = originalTasks.filter((task) => task._id !== currentTask);\n      this.setState({ tasks });\n      await deleteTask(currentTask);\n    } catch (error) {\n      this.setState({ tasks: originalTasks });\n      console.log(error);\n    }\n  };\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}