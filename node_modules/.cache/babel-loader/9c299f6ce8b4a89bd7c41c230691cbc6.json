{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem\\\\HCI\\\\Co-act-main\\\\Co-act-main\\\\src\\\\components\\\\TodoSection.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoSection extends Tasks {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App flex\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"TO-DO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"flex\",\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField // variant=\"outlined\"\n          , {\n            size: \"small\",\n            style: {\n              width: \"80%\"\n            },\n            value: this.state.currentTask,\n            required: true,\n            onChange: this.handleChange,\n            placeholder: \"Add New TO-DO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              height: \"40px\"\n            },\n            color: \"primary\" // variant=\"outlined\"\n            ,\n            type: \"submit\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n            className: \"flex task_container\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed,\n              onClick: () => this.handleUpdate(task._id),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.completed ? \"task line_through\" : \"task\",\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleDelete(task._id),\n              color: \"secondary\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoSection;","map":{"version":3,"sources":["D:/6th sem/HCI/Co-act-main/Co-act-main/src/components/TodoSection.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","TodoSection","state","tasks","currentTask","render","handleSubmit","margin","width","handleChange","height","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mBAAjC;;;AACA,MAAMC,WAAN,SAA0BL,KAA1B,CAAgC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADsB;AAAA;;AAE9BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAE,KAAKI,YADjB;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAHT;AAAA,kCAKE,QAAC,SAAD,CACE;AADF;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAHT;AAIE,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,WAJpB;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,QAAQ,EAAE,KAAKK,YANjB;AAOE,YAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,kBALF,eAcE,QAAC,MAAD;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aADT;AAEE,YAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAyBE;AAAA,oBACGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACT,QAAC,KAAD;AAAsB,YAAA,SAAS,EAAC,qBAAhC;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,OAAO,EAAEA,IAAI,CAACC,SADhB;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAFjB;AAGE,cAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAK,cAAA,SAAS,EAAEH,IAAI,CAACC,SAAL,GAAiB,mBAAjB,GAAuC,MAAvD;AAAA,wBACGD,IAAI,CAACA;AADR;AAAA;AAAA;AAAA;AAAA,oBANF,eASE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CADjB;AAEE,cAAA,KAAK,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAYH,IAAI,CAACG,GAAjB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AAtD6B;;AAwDhC,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nclass TodoSection extends Tasks {\n  state = { tasks: [], currentTask: \"\" };\n  render() {\n    const { tasks } = this.state;\n    return (\n      <div className=\"App flex\">\n        <Paper elevation={3} className=\"container\">\n          <div className=\"heading\">TO-DO</div>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"flex\"\n            style={{ margin: \"15px 0\" }}\n          >\n            <TextField\n              // variant=\"outlined\"\n              size=\"small\"\n              style={{ width: \"80%\" }}\n              value={this.state.currentTask}\n              required={true}\n              onChange={this.handleChange}\n              placeholder=\"Add New TO-DO\"\n            />\n            <Button\n              style={{ height: \"40px\" }}\n              color=\"primary\"\n              // variant=\"outlined\"\n              type=\"submit\"\n            >\n              Add task\n            </Button>\n          </form>\n          <div>\n            {tasks.map((task) => (\n              <Paper key={task._id} className=\"flex task_container\">\n                <Checkbox\n                  checked={task.completed}\n                  onClick={() => this.handleUpdate(task._id)}\n                  color=\"primary\"\n                />\n                <div className={task.completed ? \"task line_through\" : \"task\"}>\n                  {task.task}\n                </div>\n                <Button\n                  onClick={() => this.handleDelete(task._id)}\n                  color=\"secondary\"\n                >\n                  delete\n                </Button>\n              </Paper>\n            ))}\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\nexport default TodoSection;\n"]},"metadata":{},"sourceType":"module"}