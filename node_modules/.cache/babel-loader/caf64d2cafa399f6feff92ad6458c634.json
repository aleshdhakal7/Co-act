{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem\\\\HCI\\\\Co-act-main\\\\Co-act-main\\\\src\\\\components\\\\Task.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { deleteTask } from \"../services/taskServices1\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Task extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      assignedBy: JSON.parse(localStorage.getItem(\"user\")).displayName,\n      uid: JSON.parse(localStorage.getItem(\"user\")).id,\n      cospaceName: localStorage.getItem(\"recent_cospace_clicked\"),\n      task: \"\",\n      taskNotes: \"\",\n      taskStatus: \"Pending\",\n      taskList: []\n    };\n    this.compare = (a, b) => {\n      if (a.taskStatus == b.taskStatus) return 0;\n      if (a.taskStatus == \"Completed\") return 1;\n      if (a.taskStatus == \"Pending\") return -1;\n      if (b.taskStatus == \"Completed\") return -1;\n      if (b.taskStatus == \"Pending\") return 1;\n      return 0;\n    };\n    this.componentDidMountAsst = async () => {\n      const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n      const currentCospace = localStorage.getItem(\"recent_cospace_clicked\");\n      try {\n        const {\n          data\n        } = await this.getTasks();\n        let datas = [];\n        data.forEach(task => {\n          if (task.cospaceName === currentCospace) {\n            datas.push(task);\n          }\n        });\n        datas.sort(this.compare);\n        this.setState({\n          taskList: datas\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.getTasks = () => {\n      return axios.get(\"http://localhost:8000/task\");\n    };\n    this.handleChange = event => {\n      if (event.target.name === \"taskStatus\") {\n        this.setState({\n          taskStatus: event.target.value\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      if (this.state.task === \"\" || this.state.taskNotes === \"\") {\n        NotificationManager.warning(\"Please Fill up Required Field. Please Check Task field And Task Notes field\");\n        return false;\n      }\n      let data = {\n        assignedBy: this.state.assignedBy,\n        uid: this.state.uid,\n        task: this.state.task,\n        taskNotes: this.state.taskNotes,\n        taskStatus: this.state.taskStatus,\n        cospaceName: this.state.cospaceName\n      };\n      axios.post(\"http://localhost:8000/task/add\", data).then(async res => {\n        NotificationManager.success(\"Task added!\");\n        this.state.task = \"\";\n        this.state.taskNotes = \"\";\n        this.state.taskStatus = \"Pending\";\n        this.componentDidMountAsst();\n      }).catch(error => {\n        if (error.response.status && error.response.status === 400) NotificationManager.error(\"Bad Request\");else NotificationManager.error(\"Something Went Wrong\");\n      });\n    };\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.taskList;\n      try {\n        const taskList = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          taskList\n        });\n        await deleteTask(currentTask);\n        NotificationManager.info(\"Task deleted successfully!!\");\n      } catch (error) {\n        this.setState({\n          taskList: originalTasks\n        });\n        console.log(error);\n      }\n    };\n    this.handleTake = async currentTask => {\n      const originalTasks = this.state.taskList;\n      try {\n        for (let task of originalTasks) {\n          if (task._id === currentTask) {\n            task.takenBy = this.state.assignedBy;\n            task.taskStatus = \"In Progress\";\n          }\n        }\n        this.setState({\n          originalTasks\n        });\n        axios.patch(\"http://localhost:8000/task/take/\" + currentTask, {\n          actor: this.state.assignedBy\n        }).then(() => {\n          NotificationManager.success(\"Task taken successfully!!\");\n        }).catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n        });\n      } catch (error) {\n        this.setState({\n          taskList: originalTasks\n        });\n        console.log(error);\n      }\n    };\n    this.handleDone = async currentTask => {\n      const originalTasks = this.state.taskList;\n      try {\n        for (let task of originalTasks) {\n          if (task._id === currentTask) {\n            task.takenBy = this.state.assignedBy;\n            task.taskStatus = \"Completed\";\n          }\n        }\n        this.setState({\n          originalTasks\n        });\n        axios.patch(\"http://localhost:8000/task/done/\" + currentTask).then(() => {\n          NotificationManager.success(\"Task Completed successfully!!\");\n        }).catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n        });\n      } catch (error) {\n        this.setState({\n          taskList: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n  componentDidMount() {\n    this.componentDidMountAsst();\n  }\n  render() {\n    let {\n      taskList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noticontainer\",\n        id: \"noticontainer\",\n        children: /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: localStorage.getItem(\"recent_cospace_clicked_description\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addnewtask\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"taskform\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskname\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskName\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"task\",\n              className: \"taskname\",\n              onChange: this.handleChange,\n              value: this.state.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasknotes\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskName\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Task Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"3\",\n              name: \"taskNotes\",\n              className: \"form-control\",\n              onChange: this.handleChange,\n              value: this.state.taskNotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"flexrow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskstatus\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"taskStatus\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Task Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"taskStatus\",\n                className: \"taskstatusselect\",\n                onChange: this.handleChange,\n                value: this.state.taskStatus,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"In Progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Completed\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Hold\",\n                  children: \"Hold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"submitnewtask\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                name: \"add\",\n                id: \"addnewtask\",\n                value: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"taskcards tasklisthead\",\n          style: {\n            height: \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskName\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskNotes\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Task Notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignedBy\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Assigned By\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskStatus\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Task Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"taskcards\",\n          children: taskList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskName\",\n                children: task.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskNotes\",\n                children: task.taskNotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignedBy\",\n                children: task.assignedBy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskStatus\",\n                children: task.taskStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskcontrols\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edittasks\",\n                children: task.taskStatus !== \"Completed\" ? task.takenBy == this.state.assignedBy ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"donebtn\",\n                  onClick: () => this.handleDone(task._id),\n                  children: \"Done\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"editbtn\",\n                  onClick: () => this.handleTake(task._id),\n                  children: \"Take\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 24\n                }, this) : \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"deletetasks\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"deletebtn\",\n                  onClick: () => this.handleDelete(task._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), task.takenBy && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taken\",\n              children: [\"Taken By: \", task.takenBy]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Task;","map":{"version":3,"names":["React","axios","deleteTask","NotificationContainer","NotificationManager","jsxDEV","_jsxDEV","Task","Component","constructor","arguments","state","assignedBy","JSON","parse","localStorage","getItem","displayName","uid","id","cospaceName","task","taskNotes","taskStatus","taskList","compare","a","b","componentDidMountAsst","currentCospace","data","getTasks","datas","forEach","push","sort","setState","error","console","log","get","handleChange","event","target","name","value","handleSubmit","e","preventDefault","warning","post","then","res","success","catch","response","status","handleDelete","currentTask","originalTasks","filter","_id","info","handleTake","takenBy","patch","actor","handleDone","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","rows","style","height","map","onClick"],"sources":["D:/6th sem/HCI/Co-act-main/Co-act-main/src/components/Task.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { deleteTask } from \"../services/taskServices1\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nclass Task extends React.Component {\n  state = {\n    assignedBy: JSON.parse(localStorage.getItem(\"user\")).displayName,\n    uid: JSON.parse(localStorage.getItem(\"user\")).id,\n    cospaceName: localStorage.getItem(\"recent_cospace_clicked\"),\n    task: \"\",\n    taskNotes: \"\",\n    taskStatus: \"Pending\",\n    taskList: [],\n  };\n\n  compare = (a, b) => {\n      if(a.taskStatus == b.taskStatus) return 0;\n      if(a.taskStatus == \"Completed\") return 1;\n      if(a.taskStatus == \"Pending\") return -1;\n      if(b.taskStatus == \"Completed\") return -1;\n      if(b.taskStatus == \"Pending\") return 1;\n      return 0;\n  }\n\n  componentDidMountAsst = async () => {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).id;\n    const currentCospace = localStorage.getItem(\"recent_cospace_clicked\");\n    try {\n      const { data } = await this.getTasks();\n      let datas = [];\n      data.forEach((task) => {\n        if (task.cospaceName === currentCospace) {\n          datas.push(task);\n        }\n      });\n      datas.sort(this.compare);\n      this.setState({ taskList: datas });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  componentDidMount() {\n    this.componentDidMountAsst();\n  }\n\n  getTasks = () => {\n    return axios.get(\"http://localhost:8000/task\");\n  };\n  handleChange = (event) => {\n    if (event.target.name === \"taskStatus\") {\n      this.setState({\n        taskStatus: event.target.value,\n      });\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.task === \"\" || this.state.taskNotes === \"\") {\n      NotificationManager.warning(\n        \"Please Fill up Required Field. Please Check Task field And Task Notes field\"\n      );\n      return false;\n    }\n    let data = {\n      assignedBy: this.state.assignedBy,\n      uid: this.state.uid,\n      task: this.state.task,\n      taskNotes: this.state.taskNotes,\n      taskStatus: this.state.taskStatus,\n      cospaceName: this.state.cospaceName,\n    };\n\n    axios\n      .post(\"http://localhost:8000/task/add\", data)\n      .then(async (res) => {\n        NotificationManager.success(\"Task added!\");\n        this.state.task = \"\";\n        this.state.taskNotes = \"\";\n        this.state.taskStatus = \"Pending\";\n        this.componentDidMountAsst();\n      })\n      .catch((error) => {\n        if (error.response.status && error.response.status === 400)\n          NotificationManager.error(\"Bad Request\");\n        else NotificationManager.error(\"Something Went Wrong\");\n      });\n  };\n\n  handleDelete = async (currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      const taskList = originalTasks.filter((task) => task._id !== currentTask);\n      this.setState({ taskList });\n      await deleteTask(currentTask);\n      NotificationManager.info(\"Task deleted successfully!!\");\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  };\n\n  handleTake = async(currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      for(let task of originalTasks){\n          if(task._id === currentTask){\n              task.takenBy = this.state.assignedBy;\n              task.taskStatus = \"In Progress\";\n          }\n      }\n      this.setState({ originalTasks });\n\n      axios\n      .patch(\"http://localhost:8000/task/take/\" + currentTask, {actor: this.state.assignedBy})\n      .then(() => {\n          NotificationManager.success(\"Task taken successfully!!\");\n      })\n      .catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n      })\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  }\n\n  handleDone = async(currentTask) => {\n    const originalTasks = this.state.taskList;\n    try {\n      for(let task of originalTasks){\n          if(task._id === currentTask){\n              task.takenBy = this.state.assignedBy;\n              task.taskStatus = \"Completed\";\n          }\n      }\n      this.setState({ originalTasks });\n\n      axios\n      .patch(\"http://localhost:8000/task/done/\" + currentTask)\n      .then(() => {\n          NotificationManager.success(\"Task Completed successfully!!\");\n      })\n      .catch(() => {\n          NotificationManager.info(\"Something went wrong!!\");\n      })\n    } catch (error) {\n      this.setState({ taskList: originalTasks });\n      console.log(error);\n    }\n  }\n\n\n  render() {\n    let { taskList } = this.state;\n    return (\n      <div className=\"tasksection\">\n        <div className=\"noticontainer\" id=\"noticontainer\">\n          <NotificationContainer />\n        </div>\n        <h1>Tasks</h1>\n        <h2>{localStorage.getItem(\"recent_cospace_clicked_description\")}</h2>\n        <div className=\"addnewtask\">\n          <form onSubmit={this.handleSubmit} className=\"taskform\">\n            <div className=\"taskname\">\n              <label htmlFor=\"taskName\">\n                <b>Task Name</b>\n              </label>\n              <input\n                type=\"text\"\n                name=\"task\"\n                className=\"taskname\"\n                onChange={this.handleChange}\n                value={this.state.task}\n              />\n            </div>\n            <div className=\"tasknotes\">\n              <label htmlFor=\"taskName\">\n                <b>Task Notes</b>\n              </label>\n              <textarea\n                rows=\"3\"\n                name=\"taskNotes\"\n                className=\"form-control\"\n                onChange={this.handleChange}\n                value={this.state.taskNotes}\n              ></textarea>\n            </div>\n            <div id=\"flexrow\">\n              <div className=\"taskstatus\">\n                <label htmlFor=\"taskStatus\">\n                  <b>Task Status</b>\n                </label>\n                <select\n                  name=\"taskStatus\"\n                  className=\"taskstatusselect\"\n                  onChange={this.handleChange}\n                  value={this.state.taskStatus}\n                >\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"In Progress\">In progress</option>\n                  <option value=\"Completed\">Completed</option>\n                  <option value=\"Hold\">Hold</option>\n                </select>\n              </div>\n              <div className=\"submitnewtask\">\n                <input\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"addnewtask\"\n                  value=\"Add\"\n                ></input>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"tasklist\">\n          <ul className=\"taskcards tasklisthead\" style={{ height: \"50px\" }}>\n            <li>\n              <div className=\"taskcard\">\n                <div className=\"taskName\">\n                  <b>Task</b>\n                </div>\n                <div className=\"taskNotes\">\n                  <b>Task Notes</b>\n                </div>\n                <div className=\"assignedBy\">\n                  <b>Assigned By</b>\n                </div>\n                <div className=\"taskStatus\">\n                  <b>Task Status</b>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"tasklist\">\n          <ul className=\"taskcards\">\n            {taskList.map((task) => (\n              <li>\n                <div className=\"taskcard\">\n                  <div className=\"taskName\">{task.task}</div>\n                  <div className=\"taskNotes\">{task.taskNotes}</div>\n                  <div className=\"assignedBy\">{task.assignedBy}</div>\n                  <div className=\"taskStatus\">{task.taskStatus}</div>\n                </div>\n                <div className=\"taskcontrols\">\n                  <div className=\"edittasks\">\n                    {   (task.taskStatus !== \"Completed\") ?\n                        task.takenBy == this.state.assignedBy?\n                        <button\n                        id=\"donebtn\"\n                        onClick={() => this.handleDone(task._id)}\n                        >\n                        Done\n                      </button>\n                     : <button\n                      id=\"editbtn\"\n                      onClick={() => this.handleTake(task._id)}\n                      >\n                      Take\n                    </button>\n                    :\" \"}\n                  </div>\n                  <div className=\"deletetasks\">\n                    <button\n                      id=\"deletebtn\"\n                      onClick={() => this.handleDelete(task._id)}\n                      >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n                {task.takenBy && <div className=\"taken\">Taken By: {task.takenBy}</div>}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}